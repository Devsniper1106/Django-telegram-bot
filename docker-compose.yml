version: "3.8"

services:
  db:
    image: postgres:12
    container_name: ${DB_CONTAINER_NAME}
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./sql:/sql/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    env_file:
      - ./.env
    ports:
      - ${DB_LOCAL_PORT}:${DB_CONTAINER_PORT}
  redis:
    image: redis:alpine
    container_name: ${REDIS_CONTAINER_NAME}
  web:
    build: .
    container_name: ${WEB_CONTAINER_NAME}
    command: python manage.py runserver 0.0.0.0:${DJANGO_LOCAL_PORT}
    volumes:
      - .:/code
    ports:
      - ${DJANGO_LOCAL_PORT}:${DJANGO_CONTAINER_PORT}
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
  bot:
    build: .
    container_name: ${TG_BOT_CONTAINER_NAME}
    command: python run_pooling.py
    env_file:
      - ./.env
    depends_on:
      - web
  celery:
    build: .
    container_name: ${CELERY_CONTAINER_NAME}
    command: celery -A dtb worker --loglevel=INFO
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - redis
      - web
  celery-beat:
    build: .
    container_name: ${CELERY_BEAT_CONTAINER_NAME}
    command: celery -A dtb beat --loglevel=INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - redis
      - celery
      - web

volumes:
  postgres_data: